{"version":3,"file":"static/js/795.a204a6e8.chunk.js","mappings":"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","sources":["Sprint/SprintList.jsx","service/BacklogItemService.js","service/ProjectService.js","service/SprintService.js","../node_modules/@mui/icons-material/esm/MoreVert.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Alert/Alert.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n    Box,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Button,\n    CircularProgress,\n    Alert,\n    Grid,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    IconButton,\n    Select,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    List,\n    ListItem,\n    ListItemText,\n    Tooltip,\n    styled,\n    Paper,\n    Slide,\n    Collapse,\n    Menu,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport sprintService from '../service/SprintService';\nimport projectService from '../service/ProjectService';\nimport backlogItemService from '../service/BacklogItemService';\n\n// Styled Components\nconst StyledAccordion = styled(Accordion)(({ theme }) => ({\n    marginBottom: theme.spacing(2),\n    boxShadow: theme.shadows[1],\n    borderRadius: theme.shape.borderRadius + 'px !important',\n    '&:before': {\n        display: 'none',\n    },\n    '&.Mui-expanded': {\n        margin: theme.spacing(2, 0),\n    },\n}));\n\nconst StyledAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    '& .MuiAccordionSummary-content': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%',\n    },\n    '&:hover': {\n        backgroundColor: theme.palette.grey[50],\n    },\n}));\n\nconst StyledAccordionDetails = styled(AccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.background.paper,\n}));\n\nconst StyledChip = styled(Chip)(({ theme, status }) => ({\n    fontWeight: 'bold',\n    borderRadius: '16px',\n    ...(status === 'Active' && {\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n    }),\n    ...(status === 'Completed' && {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.grey[700],\n    }),\n    ...(status === 'Future' && {\n        backgroundColor: theme.palette.info.light,\n        color: theme.palette.info.dark,\n    }),\n}));\n\nconst ActionButton = styled(IconButton)(({ theme }) => ({\n    color: theme.palette.text.secondary,\n    '&:hover': {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst SprintList = () => {\n    const [sprints, setSprints] = useState([]);\n    const [projects, setProjects] = useState([]);\n    const [allBacklogItems, setAllBacklogItems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [addDialogOpen, setAddDialogOpen] = useState(false);\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [addBacklogItemDialogOpen, setAddBacklogItemDialogOpen] = useState(false);\n    const [selectedSprint, setSelectedSprint] = useState(null);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [newSprint, setNewSprint] = useState({\n        sprintName: '',\n        startDate: '',\n        endDate: '',\n        goal: '',\n        capacity: 0,\n        project: '',\n    });\n    const [selectedBacklogItems, setSelectedBacklogItems] = useState([]);\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        try {\n            setLoading(true);\n            const [sprintsResponse, projectsResponse, backlogItemsResponse] = await Promise.all([\n                sprintService.getAll(),\n                projectService.getAll(),\n                backlogItemService.getAll(),\n            ]);\n            setSprints(sprintsResponse?.data || []);\n            setProjects(projectsResponse?.data || []);\n            setAllBacklogItems(backlogItemsResponse?.data || []);\n        } catch (err) {\n            setError('Failed to fetch data. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n\n    const handleMenuOpen = (event, sprint) => {\n        setAnchorEl(event.currentTarget);\n        setSelectedSprint(sprint);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleEditClick = () => {\n        setNewSprint({\n            sprintName: selectedSprint.sprintName,\n            startDate: selectedSprint.startDate.split('T')[0],\n            endDate: selectedSprint.endDate.split('T')[0],\n            goal: selectedSprint.goal,\n            capacity: selectedSprint.capacity,\n            project: selectedSprint.project._id,\n        });\n        setEditDialogOpen(true);\n        handleMenuClose();\n    };\n\n    const handleDeleteClick = () => {\n        setDeleteDialogOpen(true);\n        handleMenuClose();\n    };\n\n    const handleEdit = async () => {\n        try {\n            await sprintService.update(selectedSprint._id, newSprint);\n            setEditDialogOpen(false);\n            setSelectedSprint(null);\n            fetchData();\n        } catch (err) {\n            setError('Failed to update sprint. Please try again.');\n        }\n    };\n\n    const handleDelete = async () => {\n        try {\n            await sprintService.deleteSprint(selectedSprint._id);\n            setDeleteDialogOpen(false);\n            setSelectedSprint(null);\n            fetchData();\n        } catch (err) {\n            setError('Failed to delete sprint. Please try again.');\n        }\n    };\n\n    // Existing handlers\n    const handleAddSprint = async () => {\n        if (!newSprint.sprintName || !newSprint.startDate || !newSprint.endDate || !newSprint.project) {\n            setError('Please fill in all required fields.');\n            return;\n        }\n        try {\n            await sprintService.create(newSprint);\n            setNewSprint({\n                sprintName: '',\n                startDate: '',\n                endDate: '',\n                goal: '',\n                capacity: 0,\n                project: '',\n            });\n            setAddDialogOpen(false);\n            fetchData();\n        } catch (err) {\n            setError('Failed to add sprint. Please try again.');\n        }\n    };\n\n    const formatDate = (date) => {\n        return new Date(date).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        });\n    };\n\n    const getSprintStatus = (sprint) => {\n        const today = new Date();\n        const startDate = new Date(sprint.startDate);\n        const endDate = new Date(sprint.endDate);\n\n        if (today < startDate) return 'Future';\n        if (today > endDate) return 'Completed';\n        return 'Active';\n    };\n\n    const handleOpenAddBacklogItemDialog = (sprint) => {\n        setSelectedSprint(sprint);\n        setSelectedBacklogItems(sprint.backlogItems || []);\n        setAddBacklogItemDialogOpen(true);\n    };\n\n    const handleCloseAddBacklogItemDialog = () => {\n        setAddBacklogItemDialogOpen(false);\n        setSelectedSprint(null);\n        setSelectedBacklogItems([]);\n    };\n\n    const handleAddBacklogItemsToSprint = async () => {\n        if (!selectedSprint) return;\n        try {\n            await sprintService.update(selectedSprint._id, {\n                backlogItems: selectedBacklogItems,\n            });\n            handleCloseAddBacklogItemDialog();\n            fetchData();\n        } catch (err) {\n            setError('Failed to add backlog items to sprint. Please try again.');\n        }\n    };\n\n    const handleToggleBacklogItem = (itemId) => {\n        if (selectedBacklogItems.includes(itemId)) {\n            setSelectedBacklogItems(selectedBacklogItems.filter((id) => id !== itemId));\n        } else {\n            setSelectedBacklogItems([...selectedBacklogItems, itemId]);\n        }\n    };\n\n    // Memoize filtered backlog items\n    const filteredBacklogItems = useMemo(() => {\n        if (!selectedSprint) return [];\n        return allBacklogItems.filter((item) => item.project === selectedSprint.project._id);\n    }, [allBacklogItems, selectedSprint]);\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n                <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: '#333' }}>\n                    Sprint Management\n                </Typography>\n                <Tooltip title=\"Add New Sprint\">\n                    <IconButton\n                        color=\"primary\"\n                        onClick={() => setAddDialogOpen(true)}\n                        sx={{\n                            backgroundColor: (theme) => theme.palette.primary.light,\n                            '&:hover': {\n                                backgroundColor: (theme) => theme.palette.primary.main,\n                            },\n                        }}\n                    >\n                        <AddIcon />\n                    </IconButton>\n                </Tooltip>\n            </Box>\n\n            {error && (\n                <Alert severity=\"error\" onClose={() => setError(null)} sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n\n            {loading ? (\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n                    <CircularProgress />\n                </Box>\n            ) : (\n                sprints.map((sprint) => (\n                    <StyledAccordion key={sprint._id}>\n                        <StyledAccordionSummary expandIcon={<ExpandMoreIcon />}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n                                <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mr: 2 }}>\n                                    {sprint.sprintName}\n                                </Typography>\n                                <Typography variant=\"body2\" sx={{ color: 'text.secondary', mr: 2 }}>\n                                    {`${formatDate(sprint.startDate)} - ${formatDate(sprint.endDate)}`}\n                                </Typography>\n                                <StyledChip\n                                    label={getSprintStatus(sprint)}\n                                    status={getSprintStatus(sprint)}\n                                    size=\"small\"\n                                />\n                            </Box>\n                            <ActionButton\n                                size=\"small\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleMenuOpen(e, sprint);\n                                }}\n                            >\n                                <MoreVertIcon />\n                            </ActionButton>\n                        </StyledAccordionSummary>\n                        <StyledAccordionDetails>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"subtitle1\" gutterBottom>\n                                        <strong>Goal:</strong> {sprint.goal || 'No goal set'}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" gutterBottom>\n                                        <strong>Capacity:</strong> {sprint.capacity || 'Not defined'}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" gutterBottom>\n                                        <strong>Project:</strong> {sprint.project?.projectName}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        onClick={() => handleOpenAddBacklogItemDialog(sprint)}\n                                        sx={{ mt: 2 }}\n                                    >\n                                        Manage Backlog Items\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </StyledAccordionDetails>\n                    </StyledAccordion>\n                ))\n            )}\n\n            {/* Sprint Actions Menu */}\n            <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={handleMenuClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuItem onClick={handleEditClick}>\n                    <EditIcon sx={{ mr: 1 }} fontSize=\"small\" />\n                    Edit Sprint\n                </MenuItem>\n                <MenuItem onClick={handleDeleteClick} sx={{ color: 'error.main' }}>\n                    <DeleteIcon sx={{ mr: 1 }} fontSize=\"small\" />\n                    Delete Sprint\n                </MenuItem>\n            </Menu>\n\n            {/* Edit Sprint Dialog */}\n            <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n                <DialogTitle>Edit Sprint</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        label=\"Sprint Name\"\n                        value={newSprint.sprintName}\n                        onChange={(e) => setNewSprint({ ...newSprint, sprintName: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        label=\"Start Date\"\n                        type=\"date\"\n                        value={newSprint.startDate}\n                        onChange={(e) => setNewSprint({ ...newSprint, startDate: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{ shrink: true }}\n                        required\n                    />\n                    <TextField\n                        label=\"End Date\"\n                        type=\"date\"\n                        value={newSprint.endDate}\n                        onChange={(e) => setNewSprint({ ...newSprint, endDate: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{ shrink: true }}\n                        required\n                    />\n                    <TextField\n                        label=\"Goal\"\n                        value={newSprint.goal}\n                        onChange={(e) => setNewSprint({ ...newSprint, goal: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label=\"Capacity\"\n                        type=\"number\"\n                        value={newSprint.capacity}\n                        onChange={(e) => setNewSprint({ ...newSprint, capacity: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <FormControl fullWidth margin=\"normal\" required>\n                        <InputLabel>Project</InputLabel>\n                        <Select\n                            value={newSprint.project}\n                            onChange={(e) => setNewSprint({ ...newSprint, project: e.target.value })}\n                        >\n                            {projects.map((project) => (\n                                <MenuItem key={project._id} value={project._id}>\n                                    {project.projectName}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\n                    <Button variant=\"contained\" onClick={handleEdit}>\n                        Save Changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Delete Confirmation Dialog */}\n            <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n                <DialogTitle>Delete Sprint</DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        Are you sure you want to delete this sprint? This action cannot be undone.\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"error\" onClick={handleDelete}>\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Add Sprint Dialog */}\n            <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n                <DialogTitle>Add Sprint</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        label=\"Sprint Name\"\n                        value={newSprint.sprintName}\n                        onChange={(e) => setNewSprint({ ...newSprint, sprintName: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        label=\"Start Date\"\n                        type=\"date\"\n                        value={newSprint.startDate}\n                        onChange={(e) => setNewSprint({ ...newSprint, startDate: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{ shrink: true }}\n                        required\n                    />\n                    <TextField\n                        label=\"End Date\"\n                        type=\"date\"\n                        value={newSprint.endDate}\n                        onChange={(e) => setNewSprint({ ...newSprint, endDate: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{ shrink: true }}\n                        required\n                    />\n                    <TextField\n                        label=\"Goal\"\n                        value={newSprint.goal}\n                        onChange={(e) => setNewSprint({ ...newSprint, goal: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label=\"Capacity\"\n                        type=\"number\"\n                        value={newSprint.capacity}\n                        onChange={(e) => setNewSprint({ ...newSprint, capacity: e.target.value })}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <FormControl fullWidth margin=\"normal\" required>\n                        <InputLabel>Project</InputLabel>\n                        <Select\n                            value={newSprint.project}\n                            onChange={(e) => setNewSprint({ ...newSprint, project: e.target.value })}\n                        >\n                            {projects.map((project) => (\n                                <MenuItem key={project._id} value={project._id}>\n                                    {project.projectName}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setAddDialogOpen(false)}>Cancel</Button>\n                    <Button variant=\"contained\" onClick={handleAddSprint}>\n                        Add Sprint\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Add Backlog Items Dialog */}\n            <Dialog\n                open={addBacklogItemDialogOpen}\n                onClose={handleCloseAddBacklogItemDialog}\n                maxWidth=\"sm\"\n                fullWidth\n            >\n                <DialogTitle>Add Backlog Items to Sprint</DialogTitle>\n                <DialogContent>\n                    {filteredBacklogItems.length > 0 ? (\n                        <List>\n                            {filteredBacklogItems.map((item) => (\n                                <ListItem\n                                    key={item._id}\n                                    button\n                                    onClick={() => handleToggleBacklogItem(item._id)}\n                                    selected={selectedBacklogItems.includes(item._id)}\n                                    sx={{\n                                        borderRadius: 1,\n                                        mb: 1,\n                                        '&.Mui-selected': {\n                                            backgroundColor: (theme) => theme.palette.primary.light,\n                                        },\n                                        '&.Mui-selected:hover': {\n                                            backgroundColor: (theme) => theme.palette.primary.light,\n                                        },\n                                    }}\n                                >\n                                    <ListItemText\n                                        primary={item.title}\n                                        secondary={`Status: ${item.status}`}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : (\n                        <Typography color=\"textSecondary\">\n                            No available backlog items for this project.\n                        </Typography>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAddBacklogItemDialog}>Cancel</Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleAddBacklogItemsToSprint}\n                        disabled={!selectedBacklogItems.length}\n                    >\n                        Add Selected Items\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default SprintList;\n","import httpClient from '../http-common';\r\n\r\nconst getAll = () => {\r\n    return httpClient.get('/BacklogItems');\r\n};\r\n\r\nconst getBacklogItems = (BacklogsId) => {\r\n    return httpClient.get(`/BacklogItems/id/${BacklogsId}`);\r\n};\r\n\r\nconst create = (BacklogsData) => {\r\n    return httpClient.post('/BacklogItems', BacklogsData);\r\n};\r\n\r\nconst update = (BacklogsId, BacklogsData) => {\r\n    return httpClient.put(`/BacklogItems/${BacklogsId}`, BacklogsData);\r\n};\r\n\r\nconst deleteBacklogItems = (BacklogsId) => {\r\n    return httpClient.delete(`/BacklogItems/${BacklogsId}`);\r\n};\r\n\r\nexport default { getAll, create, deleteBacklogItems, getBacklogItems, update };\r\n","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get(\"/projects\");\n};\n\nconst create = data => {\n    return httpClient.post(\"/projects\", data);\n};\n\nconst get = id => {\n    return httpClient.get(`/projects/${id}`);\n};\n\nconst getProjectById = id => {\n    return httpClient.get(`/projects/id/${id}`);\n};\n\nconst update = (id, data) => {\n    return httpClient.put(`/projects/${id}`, data);\n};\n\nconst remove = id => {\n    return httpClient.delete(`/projects/${id}`);\n};\n\nconst removeAll = () => {\n    return httpClient.delete(`/projects`);\n};\n\nconst findByTitle = title => {\n    return httpClient.get(`/projects?title=${title}`);\n};\n\nconst getProjectProgress = projectId => {\n    return httpClient.get(`/projects/${projectId}/progress`);\n};\n\nconst getBudgetAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/budget-analytics`);\n};\n\nconst getTeamPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/team-performance`);\n};\n\nconst searchProjects = searchParams => {\n    return httpClient.post(`/projects/search`, searchParams);\n};\n\nconst getProjectMessages = projectId => {\n    return httpClient.get(`/projects/${projectId}/messages`);\n};\n\nconst sendProjectMessage = (projectId, message) => {\n    return httpClient.post(`/projects/${projectId}/messages`, message);\n};\n\nconst exportProjectReport = (projectId, format) => {\n    return httpClient.get(`/projects/${projectId}/export/${format}`);\n};\n\nconst scheduleReport = (projectId, scheduleData) => {\n    return httpClient.post(`/projects/${projectId}/schedule-report`, scheduleData);\n};\n\nconst getProjectAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/analytics`);\n};\n\nconst getProjectPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/performance`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByTitle,\n    getProjectProgress,\n    getBudgetAnalytics,\n    getTeamPerformance,\n    searchProjects,\n    getProjectMessages,\n    sendProjectMessage,\n    exportProjectReport,\n    scheduleReport,\n    getProjectAnalytics,\n    getProjectById\n};\n","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get('/sprints');\n};\n\nconst getSprint = (sprintId) => {\n    return httpClient.get(`/sprints/id/${sprintId}`);\n};\n\nconst create = (sprintData) => {\n    return httpClient.post('/sprints', sprintData);\n};\n\nconst update = (sprintId, sprintData) => {\n    return httpClient.put(`/sprints/${sprintId}`, sprintData);\n};\n\nconst deleteSprint = (sprintId) => {\n    return httpClient.delete(`/sprints/${sprintId}`);\n};\n\nconst updateBacklogItems = (sprintId, backlogItemId) => {\n    console.log('Sending backlogItemId:', backlogItemId);\n    return httpClient.put(`/sprints/${sprintId}/backlogItems`, { backlogItemId });\n};\n\nconst getByProject = (projectId) => {\n    console.log('Fetching sprints for project:', projectId);\n    return httpClient.get(`/sprints/project/${projectId}`);\n};\n\nexport default { \n    getAll, \n    getSprint, \n    create, \n    update, \n    deleteSprint, \n    updateBacklogItems, \n    getByProject \n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return {\n    ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: {\n        fontWeight: theme.typography.fontWeightMedium,\n        ...(theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n        } : {\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n          color: theme.palette.getContrastText(theme.palette[color].main)\n        })\n      }\n    }))]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AlertRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      role,\n      elevation: 0\n    }\n  });\n  const [IconSlot, iconSlotProps] = useSlot('icon', {\n    className: classes.icon,\n    elementType: AlertIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  const [MessageSlot, messageSlotProps] = useSlot('message', {\n    className: classes.message,\n    elementType: AlertMessage,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: AlertAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [icon !== false ? /*#__PURE__*/_jsx(IconSlot, {\n      ...iconSlotProps,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(MessageSlot, {\n      ...messageSlotProps,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    message: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType,\n    icon: PropTypes.elementType,\n    message: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"],"names":["StyledAccordion","styled","Accordion","_ref","theme","marginBottom","spacing","boxShadow","shadows","borderRadius","shape","display","margin","StyledAccordionSummary","AccordionSummary","_ref2","backgroundColor","palette","background","paper","alignItems","justifyContent","width","grey","StyledAccordionDetails","AccordionDetails","_ref3","padding","StyledChip","Chip","_ref4","status","_objectSpread","fontWeight","success","light","color","dark","info","ActionButton","IconButton","_ref5","text","secondary","primary","main","SprintList","sprints","setSprints","useState","projects","setProjects","allBacklogItems","setAllBacklogItems","loading","setLoading","error","setError","addDialogOpen","setAddDialogOpen","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","addBacklogItemDialogOpen","setAddBacklogItemDialogOpen","selectedSprint","setSelectedSprint","anchorEl","setAnchorEl","newSprint","setNewSprint","sprintName","startDate","endDate","goal","capacity","project","selectedBacklogItems","setSelectedBacklogItems","fetchData","useCallback","async","sprintsResponse","projectsResponse","backlogItemsResponse","Promise","all","sprintService","getAll","projectService","backlogItemService","data","err","useEffect","handleMenuClose","formatDate","date","Date","toLocaleDateString","year","month","day","getSprintStatus","sprint","today","handleCloseAddBacklogItemDialog","filteredBacklogItems","useMemo","filter","item","_id","_jsxs","Box","sx","p","children","mb","_jsx","Typography","variant","Tooltip","title","onClick","AddIcon","Alert","severity","onClose","minHeight","CircularProgress","map","_sprint$project","expandIcon","ExpandMoreIcon","flexGrow","mr","concat","label","size","e","stopPropagation","handleMenuOpen","event","currentTarget","MoreVertIcon","Grid","container","xs","gutterBottom","projectName","Button","backlogItems","handleOpenAddBacklogItemDialog","mt","Menu","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleEditClick","split","EditIcon","fontSize","handleDeleteClick","DeleteIcon","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","TextField","value","onChange","target","required","type","InputLabelProps","shrink","FormControl","InputLabel","Select","DialogActions","update","deleteSprint","create","length","List","ListItem","button","handleToggleBacklogItem","itemId","includes","id","selected","ListItemText","disabled","httpClient","get","BacklogsData","post","deleteBacklogItems","BacklogsId","delete","getBacklogItems","put","remove","removeAll","findByTitle","getProjectProgress","projectId","getBudgetAnalytics","getTeamPerformance","searchProjects","searchParams","getProjectMessages","sendProjectMessage","message","exportProjectReport","format","scheduleReport","scheduleData","getProjectAnalytics","getProjectById","getSprint","sprintId","sprintData","updateBacklogItems","backlogItemId","console","log","getByProject","createSvgIcon","d","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertRoot","Paper","name","overridesResolver","props","styles","ownerState","root","capitalize","memoTheme","getColor","mode","darken","lighten","getBackgroundColor","typography","body2","variants","Object","entries","createSimplePaletteValueFilter","colorSeverity","style","vars","alertClasses","icon","border","fontWeightMedium","getContrastText","AlertIcon","marginRight","opacity","AlertMessage","minWidth","overflow","AlertAction","action","marginLeft","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","React","inProps","ref","useDefaultProps","className","closeText","components","componentsProps","iconMapping","role","slotProps","slots","other","_objectWithoutProperties","classes","composeClasses","useUtilityClasses","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseIcon","RootSlot","rootSlotProps","useSlot","shouldForwardComponentProp","clsx","elementType","additionalProps","elevation","IconSlot","iconSlotProps","MessageSlot","messageSlotProps","ActionSlot","actionSlotProps","CloseButtonSlot","closeButtonProps","CloseIconSlot","closeIconProps"],"sourceRoot":""}