{"version":3,"file":"static/js/240.c1d59e6e.chunk.js","mappings":"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","sources":["login/SignUp.jsx","service/UserService.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    TextField,\r\n    Typography,\r\n    Container,\r\n    Grid,\r\n    InputAdornment,\r\n    IconButton,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n    CssBaseline,\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\n\r\nimport userservice from \"../service/UserService\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport default function SignUp() {\r\n    const navigate = useNavigate();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [adresse, setAdresse] = useState('');  // New address state\r\n    const [tel, setTel] = useState('');\r\n    const [role, setRole] = useState('');\r\n            // New telephone state\r\n\r\n    // Handle input changes\r\n    const handleEmailChange = (event) => setEmail(event.target.value);\r\n    const handleUsernameChange = (event) => setUsername(event.target.value);\r\n    const handlePasswordChange = (event) => setPassword(event.target.value);\r\n    const handleConfirmPasswordChange = (event) => setConfirmPassword(event.target.value);\r\n    const handleRoleChange = (event) => setRole(event.target.value);\r\n    const handleAddressChange = (event) => setAdresse(event.target.value); // Address handler\r\n    const handleTelChange = (event) => setTel(event.target.value);         // Tel handler\r\n\r\n    // Toggle password visibility\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = (event) => event.preventDefault();\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            email,\r\n            password,\r\n            adresse,\r\n            tel,\r\n            role,\r\n\r\n        };\r\n\r\n        console.log(user);\r\n        userservice.create(user);\r\n        navigate('/project');\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up for WorkProject\r\n                </Typography>\r\n                <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                    <Grid container spacing={2}>\r\n                        {/* Email field */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                value={username}\r\n                                onChange={handleUsernameChange}\r\n                            />\r\n                        </Grid><Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                value={email}\r\n                                onChange={handleEmailChange}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Password field */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                autoComplete=\"new-password\"\r\n                                value={password}\r\n                                onChange={handlePasswordChange}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Confirm Password field */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"confirm-password\"\r\n                                autoComplete=\"new-password\"\r\n                                value={confirmPassword}\r\n                                onChange={handleConfirmPasswordChange}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Address field */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"adresse\"\r\n                                label=\"Address\"\r\n                                id=\"adresse\"\r\n                                autoComplete=\"adresse\"\r\n                                value={adresse}\r\n                                onChange={handleAddressChange}  // Address input handler\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Telephone field */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"tel\"\r\n                                label=\"Telephone\"\r\n                                id=\"tel\"\r\n                                autoComplete=\"tel\"\r\n                                value={tel}\r\n                                onChange={handleTelChange}  // Tel input handler\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* Role dropdown */}\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel id=\"role-label\">Role</InputLabel>\r\n                                <Select\r\n                                    labelId=\"role-label\"\r\n                                    id=\"role\"\r\n                                    value={role}\r\n                                    label=\"Role\"\r\n                                    onChange={handleRoleChange}\r\n                                >\r\n                                    <MenuItem value=\"developer\">Developer</MenuItem>\r\n                                    <MenuItem value=\"manager\">Manager</MenuItem>\r\n                                    <MenuItem value=\"admin\">Admin</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Submit button */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import httpClient from '../http-common';\nconst getAll = () => {\n    return httpClient.get(('/users'));\n}\nconst getUser =  usersId => {\n    return httpClient.get(`/users/id/${usersId}`);\n}\nconst getUserByRole =  role => {\n    return httpClient.get(`/users/role/${role}`);\n}\nconst create = ( userstData) => {\n    return httpClient.post(`/users`, userstData);\n}\nconst update = ( usersId,usersData) => {\n    return httpClient.put(`/users/${usersId}`, usersData);\n}\nconst deleteUsers =  usersId =>{\n    return httpClient.delete(`/users/${usersId}`);\n}\nexport  default {getAll,create,deleteUsers,getUser,update,getUserByRole}\n"],"names":["SignUp","navigate","useNavigate","username","setUsername","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","adresse","setAdresse","tel","setTel","role","setRole","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","event","preventDefault","user","console","log","userservice","create","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","value","onChange","target","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","onMouseDown","edge","VisibilityOff","Visibility","FormControl","InputLabel","Select","labelId","MenuItem","Button","mb","getAll","httpClient","get","userstData","post","deleteUsers","usersId","delete","concat","getUser","update","usersData","put","getUserByRole"],"sourceRoot":""}