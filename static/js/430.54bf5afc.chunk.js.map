{"version":3,"file":"static/js/430.54bf5afc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Assignment.js","../node_modules/@mui/icons-material/esm/MoreVert.js","../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/redux/es/redux.js","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1m2 14H7v-2h7zm3-4H7v-2h10zm0-4H7V7h10z\"\n}), 'Assignment');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["createSvgIcon","_jsx","d","module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","invariant","condition","format","_len","arguments","args","_key","process","undefined","Error","error","argIndex","replace","name","framesToPop","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","memoize","fn","result","memoized","EnterLeaveCounter","enter","enteringNode","previousLength","this","entered","itemsA","itemsB","set","Set","insertItem","item","add","forEach","push","union","filter","node","isNodeInDocument","contains","leave","leavingNode","items","reset","NativeDragSource","initializeExposedProperties","config","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","concat","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","slice","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","interpolate","x","xs","ys","c1s","c2s","c3s","mid","low","high","Math","floor","xHere","max","diff","diffSq","indexes","sort","dys","dxs","ms","dx","dy","i1","i2","m2","mNext","dxNext","common","m","i3","c1","invDx","getNodeClientOffset","el","nodeType","parentElement","top","left","getBoundingClientRect","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","ref","nodeName","document","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","sourceWidth","offsetHeight","sourceHeight","anchorX","anchorY","dragPreviewWidth","dragPreviewHeight","width","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","calculateYOffset","OptionsReader","globalContext","rootElement","optionsArgs","options","ownerDocument","_defineProperty","obj","HTML5BackendImpl","profile","ref1","sourcePreviewNodes","size","sourcePreviewNodeOptions","sourceNodeOptions","sourceNodes","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","dragOverTargetIds","setup","root","__isReactDndBackendSetUp","addEventListeners","teardown","removeEventListeners","clearCurrentDragSourceNode","asyncEndDragFrameId","cancelAnimationFrame","connectDragPreview","sourceId","delete","connectDragSource","handleDragStart","handleSelectStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","targetId","handleDragEnter","handleDragOver","handleDrop","target","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getCurrentSourceNodeOptions","_objectSpread","dropEffect","altKeyPressed","getCurrentDropEffect","isDraggingNativeItem","getCurrentSourcePreviewNodeOptions","captureDraggingState","itemType","getItemType","beginDragNativeItem","type","currentNativeSource","createNativeDragSource","currentNativeHandle","registry","addSource","actions","setCurrentDragSourceNode","currentDragSourceNode","mouseMoveTimeoutTimer","setTimeout","endDragIfSourceWasRemovedFromDOM","clearTimeout","defaultPrevented","unshift","_e","manager","Map","lastClientOffset","hoverRafId","getSourceClientOffset","endDragNativeItem","removeSource","body","cancelHover","scheduleHover","requestAnimationFrame","hover","publishSource","nativeType","setDragImage","dragPreviewOffset","setData","err","publishDragSource","hasAttribute","preventDefault","enterLeaveCounter","altKey","canDropOnTarget","drop","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","HTML5Backend","context","DndContext","createContext","dragDropManager","formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","random","substring","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","index","splice","dispatch","action","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","unsubscribe","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","getSource","verifyInvariants","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","createDrop","didDrop","targetIds","getTargetIds","reverse","getDroppableTargets","dropResult","getTarget","verifyDropResultType","getDropResult","determineDropResult","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","createHover","targetIdsArg","verifyTargetIdsIsArray","getTargetType","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","receiveBackend","backend","getBackend","store","createDragDropActions","boundActions","actionCreator","apply","isSetUp","handleRefCountChange","shouldSetUp","refCount","subtract","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","subscribeToStateChange","handlerIds","prevStateId","stateId","handleChange","state","currentStateId","canSkipListener","dirtyIds","areDirty","dirtyHandlerIds","subscribeToOffsetChange","previousState","dragOffset","nextState","canDrop","isDraggingSource","isOverTarget","shallow","dragOperation","getItem","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","createTextNode","observe","characterData","data","RawTask","task","onError","release","asapQueue","enqueueTask","queue","q","requestFlush","flushing","pendingErrors","capacity","flush","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","shift","taskFactory","create","tasks","freeTasks","t1","pop","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","HandlerRole","nextUniqueId","getNextHandlerId","role","id","SOURCE","TARGET","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","done","HandlerRegistryImpl","validateSourceContract","addHandler","addTarget","validateTargetContract","containsHandler","handler","dragSources","dropTargets","includePinned","isSourceId","pinnedSourceId","pinnedSource","isTargetId","removeTarget","strictEquality","prevTargetIds","has","count","xor","didChange","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","path","c","createDragDropManager","backendFactory","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","instanceId","makeStoreInstance","_objectWithoutProperties","excluded","INSTANCE_SYM","for","DndProvider","memo","_param","children","props","isGlobalInstance","getGlobalContext","ctx","createSingletonDndContext","getDndContextValue","useEffect","Provider","useMonitorOutput","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","getHandlerId","useCollectedProps","collector","connector","reconnect","useDragDropManager","useContext","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","SourceConnector","receiveHandlerId","newHandlerId","connectTarget","dragSourceOptions","dragSourceOptionsInternal","dragPreviewOptions","dragPreviewOptionsInternal","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","current","clearDragSource","clearDragPreview","wrapConnectorHooks","isRef","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","internalMonitor","DragSourceImpl","spec","globalMonitor","end","useRegisteredDragSource","useDragSource","useDragType","unregister","registerSource","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","isOver","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","registerTarget","useDrop","useDropTargetMonitor","useDropTargetConnector","useLayoutEffect","arg","memoDeps","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","displayName","throwIfCompositeComponentElement","newRef","previousRef","cloneElement","setRef","cloneWithRef","wrappedHooks","endsWith","wrappedHook"],"sourceRoot":""}