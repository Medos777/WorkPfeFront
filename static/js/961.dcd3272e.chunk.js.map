{"version":3,"file":"static/js/961.dcd3272e.chunk.js","mappings":"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","sources":["Dashboard/Dashboard.jsx","service/BacklogService.js","service/ProjectService.js","service/SprintService.js","service/TeamService.js","service/UserService.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    Box,\n    Grid,\n    Paper,\n    Typography,\n    TextField,\n    Pagination,\n    Modal,\n    Card,\n    CardContent,\n    CardActions,\n    Button,\n    Tabs,\n    Tab,\n    Avatar,\n    Switch,\n    Tooltip,\n    IconButton,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n} from \"@mui/material\";\nimport {\n    Add as AddIcon,\n    People as PeopleIcon,\n    Edit as EditIcon,\n    Delete as DeleteIcon,\n    BarChart as BarChartIcon,\n    PieChart as PieChartIcon,\n    MoreVert,\n} from \"@mui/icons-material\";\nimport {\n    BarChart,\n    Bar,\n    PieChart,\n    Pie,\n    Cell,\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip as ChartTooltip,\n    Legend,\n    ResponsiveContainer,\n} from \"recharts\";\nimport TeamService from \"../service/TeamService\";\nimport UserService from \"../service/UserService\";\nimport ProjectService from \"../service/ProjectService\";\nimport SprintService from \"../service/SprintService\";\nimport BacklogService from \"../service/BacklogService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { format } from 'date-fns';\nimport { styled } from \"@mui/material/styles\";\nimport { motion } from \"framer-motion\";\nimport { alpha } from \"@mui/material/styles\";\n\n// Constants\nconst ITEMS_PER_PAGE = 6;\nconst COLORS = [\"#4CAF50\", \"#2196F3\", \"#FFC107\", \"#FF5722\", \"#9C27B0\"];\n\n// Custom pie chart label\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, value, name }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return percent > 0 ? (\n        <text\n            x={x}\n            y={y}\n            fill=\"white\"\n            textAnchor={x > cx ? 'start' : 'end'}\n            dominantBaseline=\"central\"\n            style={{ fontSize: '12px', fontWeight: '500' }}\n        >\n            {`${name} (${value})`}\n        </text>\n    ) : null;\n};\n\n// Theme configuration\nconst themeConfig = (darkMode) =>\n    createTheme({\n        palette: {\n            mode: darkMode ? \"dark\" : \"light\",\n        },\n    });\n\n// Styled components\nconst StyledCard = styled(motion.div)(({ theme }) => ({\n    height: '100%',\n    '& .MuiCard-root': {\n        height: '100%',\n        background: theme.palette.mode === 'dark' \n            ? alpha(theme.palette.background.paper, 0.8)\n            : alpha(theme.palette.background.paper, 0.9),\n        backdropFilter: 'blur(8px)',\n        transition: 'all 0.3s ease-in-out',\n        '&:hover': {\n            transform: 'translateY(-4px)',\n            boxShadow: theme.shadows[10],\n        }\n    }\n}));\n\nconst StatsCard = styled(Paper)(({ theme }) => ({\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    background: theme.palette.mode === 'dark' \n        ? alpha(theme.palette.primary.dark, 0.12)\n        : alpha(theme.palette.primary.light, 0.12),\n    backdropFilter: 'blur(8px)',\n    transition: 'transform 0.3s ease-in-out',\n    '&:hover': {\n        transform: 'translateY(-4px)'\n    }\n}));\n\nconst ChartContainer = styled(Paper)(({ theme }) => ({\n    padding: theme.spacing(3),\n    background: theme.palette.mode === 'dark'\n        ? alpha(theme.palette.background.paper, 0.8)\n        : alpha(theme.palette.background.paper, 0.9),\n    backdropFilter: 'blur(8px)',\n    borderRadius: theme.shape.borderRadius * 2,\n    boxShadow: theme.shadows[4],\n    transition: 'all 0.3s ease-in-out',\n    '&:hover': {\n        boxShadow: theme.shadows[8]\n    }\n}));\n\nconst Dashboard = () => {\n    const [darkMode, setDarkMode] = useState(false);\n    const [teams, setTeams] = useState([]);\n    const [teamMembers, setTeamMembers] = useState([]);\n    const [projects, setProjects] = useState([]);\n    const [sprints, setSprints] = useState([]);\n    const [backlogs, setBacklogs] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const navigate = useNavigate();\n\n    // Fetch data on component mount\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            const [teamsRes, membersRes, projectsRes, sprintsRes, backlogsRes] = await Promise.all([\n                TeamService.getAll(),\n                UserService.getUserByRole(\"developer\"),\n                ProjectService.getAll(),\n                SprintService.getAll(),\n                BacklogService.getAll(),\n            ]);\n            setTeams(teamsRes.data);\n            setTeamMembers(membersRes.data);\n            setProjects(projectsRes.data);\n            setSprints(sprintsRes.data);\n            setBacklogs(backlogsRes.data);\n        } catch (err) {\n            console.error(\"Error fetching data:\", err);\n        }\n    };\n\n    const handleSearchChange = (e) => setSearchQuery(e.target.value);\n    const handleTabChange = (event, newValue) => setSelectedTab(newValue);\n\n    // Filtered teams and members\n    const filteredTeams = teams.filter((team) =>\n        team.teamName.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    const filteredMembers = teamMembers.filter((member) =>\n        member.username.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    // Pagination for current tab\n    const paginatedItems =\n        selectedTab === 0\n            ? filteredTeams.slice(\n                (currentPage - 1) * ITEMS_PER_PAGE,\n                currentPage * ITEMS_PER_PAGE\n            )\n            : filteredMembers.slice(\n                (currentPage - 1) * ITEMS_PER_PAGE,\n                currentPage * ITEMS_PER_PAGE\n            );\n\n    // Prepare data for charts\n    const progressionChartData = projects.map((project) => ({\n        name: project.projectName,\n        Progress: Math.min(\n            100,\n            Math.max(\n                0,\n                ((Date.now() - new Date(project.startDate).getTime()) /\n                    (new Date(project.endDate).getTime() -\n                        new Date(project.startDate).getTime())) *\n                100\n            )\n        ),\n    }));\n\n    const projectStatusData = [\n        { \n            name: \"Completed\", \n            value: projects.filter(p => p.status === \"Completed\").length,\n            color: COLORS[0]\n        },\n        { \n            name: \"In Progress\", \n            value: projects.filter(p => p.status === \"In Progress\").length,\n            color: COLORS[1]\n        },\n        { \n            name: \"On Hold\", \n            value: projects.filter(p => p.status === \"On Hold\").length,\n            color: COLORS[2]\n        },\n        { \n            name: \"Cancelled\", \n            value: projects.filter(p => p.status === \"Cancelled\").length,\n            color: COLORS[3]\n        }\n    ].filter(item => item.value > 0);\n\n    const sprintStatusData = [\n        { name: \"Completed\", value: sprints.filter((s) => new Date(s.endDate) < new Date()).length },\n        { name: \"Ongoing\", value: sprints.filter((s) => new Date(s.startDate) <= new Date() && new Date(s.endDate) >= new Date()).length },\n        { name: \"Upcoming\", value: sprints.filter((s) => new Date(s.startDate) > new Date()).length },\n    ];\n\n    const backlogItemCount = backlogs.map((backlog) => ({\n        name: backlog.name,\n        items: backlog.items?.length || 0,\n    }));\n\n    const handleMenuOpen = (event, item) => {\n        setAnchorEl(event.currentTarget);\n        setSelectedItem(item);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        setSelectedItem(null);\n    };\n\n    const handleEdit = () => {\n        if (selectedTab === 0) {\n            navigate(`/team/edit/${selectedItem._id}`);\n        } else {\n            navigate(`/user/edit/${selectedItem._id}`);\n        }\n        handleMenuClose();\n    };\n\n    const handleDelete = async () => {\n        if (selectedTab === 0) {\n            // Handle team deletion\n        } else {\n            // Handle member deletion\n        }\n        handleMenuClose();\n    };\n\n    return (\n        <ThemeProvider theme={themeConfig(darkMode)}>\n            <Box \n                component={motion.div}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.5 }}\n                sx={{ \n                    p: 3,\n                    minHeight: '100vh',\n                    background: (theme) => theme.palette.mode === 'dark'\n                        ? 'linear-gradient(45deg, #1a237e 0%, #121212 100%)'\n                        : 'linear-gradient(45deg, #e3f2fd 0%, #ffffff 100%)'\n                }}\n            >\n                {/* Header */}\n                <Box \n                    component={motion.div}\n                    initial={{ y: -20 }}\n                    animate={{ y: 0 }}\n                    transition={{ duration: 0.5 }}\n                    display=\"flex\" \n                    justifyContent=\"space-between\" \n                    alignItems=\"center\" \n                    mb={4}\n                >\n                    <Typography \n                        variant=\"h4\" \n                        sx={{ \n                            fontWeight: 700,\n                            background: (theme) => theme.palette.mode === 'dark'\n                                ? 'linear-gradient(45deg, #90caf9 0%, #64b5f6 100%)'\n                                : 'linear-gradient(45deg, #1976d2 0%, #1565c0 100%)',\n                            WebkitBackgroundClip: 'text',\n                            WebkitTextFillColor: 'transparent'\n                        }}\n                    >\n                        Dashboard\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                        <Switch \n                            checked={darkMode} \n                            onChange={() => setDarkMode(!darkMode)}\n                            sx={{ '& .MuiSwitch-switchBase.Mui-checked': {\n                                color: '#90caf9'\n                            }}}\n                        />\n                        <Typography>Dark Mode</Typography>\n                    </Box>\n                </Box>\n\n                {/* Stats Section */}\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6} md={3} component={motion.div} whileHover={{ scale: 1.02 }}>\n                        <StatsCard>\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>Total Projects</Typography>\n                            <Typography variant=\"h3\" sx={{ fontWeight: 700 }}>{projects.length}</Typography>\n                        </StatsCard>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3} component={motion.div} whileHover={{ scale: 1.02 }}>\n                        <StatsCard>\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>Total Teams</Typography>\n                            <Typography variant=\"h3\" sx={{ fontWeight: 700 }}>{teams.length}</Typography>\n                        </StatsCard>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3} component={motion.div} whileHover={{ scale: 1.02 }}>\n                        <StatsCard>\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>Total Members</Typography>\n                            <Typography variant=\"h3\" sx={{ fontWeight: 700 }}>{teamMembers.length}</Typography>\n                        </StatsCard>\n                    </Grid>\n                </Grid>\n\n                {/* Charts Section */}\n                <Box mt={4}>\n                    <ChartContainer>\n                        <Typography variant=\"h6\" mb={2} sx={{ fontWeight: 600 }}>\n                            Project Progression\n                        </Typography>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                            <BarChart data={progressionChartData}>\n                                <CartesianGrid strokeDasharray=\"3 3\" stroke={darkMode ? '#ffffff20' : '#00000020'} />\n                                <XAxis dataKey=\"name\" stroke={darkMode ? '#ffffff80' : '#00000080'} />\n                                <YAxis stroke={darkMode ? '#ffffff80' : '#00000080'} />\n                                <ChartTooltip \n                                    contentStyle={{\n                                        background: darkMode ? '#1a1a1a' : '#ffffff',\n                                        border: 'none',\n                                        borderRadius: '8px',\n                                        boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\n                                    }}\n                                />\n                                <Legend />\n                                <Bar dataKey=\"Progress\" fill=\"#8884d8\" radius={[4, 4, 0, 0]} />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </ChartContainer>\n                </Box>\n\n                {/* Additional Charts */}\n                <Grid container spacing={3} mt={4}>\n                    <Grid item xs={12} md={6}>\n                        <ChartContainer>\n                            <Box sx={{ position: 'relative' }}>\n                                <Typography variant=\"h6\" mb={2} sx={{ fontWeight: 600 }}>\n                                    Project Status Distribution\n                                </Typography>\n                                {projectStatusData.length === 0 ? (\n                                    <Box\n                                        display=\"flex\"\n                                        alignItems=\"center\"\n                                        justifyContent=\"center\"\n                                        height={300}\n                                    >\n                                        <Typography variant=\"body1\" color=\"text.secondary\">\n                                            No project data available\n                                        </Typography>\n                                    </Box>\n                                ) : (\n                                    <ResponsiveContainer width=\"100%\" height={300}>\n                                        <PieChart>\n                                            <Pie\n                                                data={projectStatusData}\n                                                dataKey=\"value\"\n                                                nameKey=\"name\"\n                                                cx=\"50%\"\n                                                cy=\"50%\"\n                                                innerRadius={60}\n                                                outerRadius={120}\n                                                paddingAngle={2}\n                                                labelLine={false}\n                                                label={renderCustomizedLabel}\n                                            >\n                                                {projectStatusData.map((entry, index) => (\n                                                    <Cell\n                                                        key={`cell-${index}`}\n                                                        fill={entry.color}\n                                                        stroke={darkMode ? '#121212' : '#ffffff'}\n                                                        strokeWidth={2}\n                                                    />\n                                                ))}\n                                            </Pie>\n                                            <Tooltip\n                                                contentStyle={{\n                                                    background: darkMode ? '#1a1a1a' : '#ffffff',\n                                                    border: 'none',\n                                                    borderRadius: '8px',\n                                                    boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\n                                                }}\n                                                formatter={(value, name) => [\n                                                    `${value} Project${value !== 1 ? 's' : ''}`,\n                                                    name\n                                                ]}\n                                            />\n                                            <Legend\n                                                verticalAlign=\"bottom\"\n                                                height={36}\n                                                content={({ payload }) => (\n                                                    <Box\n                                                        sx={{\n                                                            display: 'flex',\n                                                            justifyContent: 'center',\n                                                            flexWrap: 'wrap',\n                                                            gap: 2,\n                                                            mt: 2\n                                                        }}\n                                                    >\n                                                        {payload.map((entry, index) => (\n                                                            <Box\n                                                                key={`legend-${index}`}\n                                                                sx={{\n                                                                    display: 'flex',\n                                                                    alignItems: 'center',\n                                                                    gap: 1\n                                                                }}\n                                                            >\n                                                                <Box\n                                                                    sx={{\n                                                                        width: 12,\n                                                                        height: 12,\n                                                                        borderRadius: '50%',\n                                                                        backgroundColor: entry.color\n                                                                    }}\n                                                                />\n                                                                <Typography\n                                                                    variant=\"body2\"\n                                                                    sx={{\n                                                                        color: darkMode ? '#ffffff' : '#000000'\n                                                                    }}\n                                                                >\n                                                                    {entry.value}\n                                                                </Typography>\n                                                            </Box>\n                                                        ))}\n                                                    </Box>\n                                                )}\n                                            />\n                                        </PieChart>\n                                    </ResponsiveContainer>\n                                )}\n                                {/* Total Projects Counter */}\n                                <Box\n                                    sx={{\n                                        position: 'absolute',\n                                        top: '50%',\n                                        left: '50%',\n                                        transform: 'translate(-50%, -50%)',\n                                        textAlign: 'center',\n                                        pointerEvents: 'none'\n                                    }}\n                                >\n                                    <Typography\n                                        variant=\"h4\"\n                                        sx={{ \n                                            fontWeight: 700,\n                                            color: darkMode ? '#ffffff' : '#000000'\n                                        }}\n                                    >\n                                        {projects.length}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        sx={{ \n                                            color: darkMode ? '#ffffff80' : '#00000080'\n                                        }}\n                                    >\n                                        Total Projects\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </ChartContainer>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <ChartContainer>\n                            <Typography variant=\"h6\" mb={2} sx={{ fontWeight: 600 }}>\n                                Project Completion Over Time\n                            </Typography>\n                            <ResponsiveContainer width=\"100%\" height={300}>\n                                <LineChart data={progressionChartData}>\n                                    <CartesianGrid \n                                        strokeDasharray=\"3 3\" \n                                        stroke={darkMode ? '#ffffff20' : '#00000020'} \n                                    />\n                                    <XAxis \n                                        dataKey=\"name\" \n                                        stroke={darkMode ? '#ffffff80' : '#00000080'}\n                                    />\n                                    <YAxis \n                                        stroke={darkMode ? '#ffffff80' : '#00000080'}\n                                    />\n                                    <Tooltip \n                                        contentStyle={{\n                                            background: darkMode ? '#1a1a1a' : '#ffffff',\n                                            border: 'none',\n                                            borderRadius: '8px',\n                                            boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\n                                        }}\n                                    />\n                                    <Legend \n                                        verticalAlign=\"bottom\" \n                                        height={36}\n                                        formatter={(value) => (\n                                            <span style={{ color: darkMode ? '#ffffff' : '#000000' }}>\n                                                {value}\n                                            </span>\n                                        )}\n                                    />\n                                    <Line \n                                        type=\"monotone\" \n                                        dataKey=\"Progress\" \n                                        stroke=\"#8884d8\"\n                                        strokeWidth={2}\n                                        dot={{ \n                                            stroke: '#8884d8',\n                                            strokeWidth: 2,\n                                            r: 4,\n                                            fill: darkMode ? '#1a1a1a' : '#ffffff'\n                                        }}\n                                        activeDot={{ \n                                            stroke: '#8884d8',\n                                            strokeWidth: 2,\n                                            r: 6,\n                                            fill: darkMode ? '#1a1a1a' : '#ffffff'\n                                        }}\n                                    />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </ChartContainer>\n                    </Grid>\n                </Grid>\n\n                {/* Sprint and Backlog Charts */}\n                <Grid container spacing={3} mt={4}>\n                    <Grid item xs={12} md={6}>\n                        <ChartContainer>\n                            <Typography variant=\"h6\" mb={2} sx={{ fontWeight: 600 }}>\n                                Sprint Status Distribution\n                            </Typography>\n                            <ResponsiveContainer width=\"100%\" height={300}>\n                                <PieChart>\n                                    <Pie\n                                        data={sprintStatusData}\n                                        dataKey=\"value\"\n                                        nameKey=\"name\"\n                                        cx=\"50%\"\n                                        cy=\"50%\"\n                                        outerRadius={120}\n                                        label\n                                    >\n                                        {sprintStatusData.map((entry, index) => (\n                                            <Cell \n                                                key={`cell-${index}`} \n                                                fill={COLORS[index % COLORS.length]}\n                                            />\n                                        ))}\n                                    </Pie>\n                                    <Tooltip \n                                        contentStyle={{\n                                            background: darkMode ? '#1a1a1a' : '#ffffff',\n                                            border: 'none',\n                                            borderRadius: '8px',\n                                            boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\n                                        }}\n                                    />\n                                    <Legend \n                                        verticalAlign=\"bottom\" \n                                        height={36}\n                                        formatter={(value) => (\n                                            <span style={{ color: darkMode ? '#ffffff' : '#000000' }}>\n                                                {value}\n                                            </span>\n                                        )}\n                                    />\n                                </PieChart>\n                            </ResponsiveContainer>\n                        </ChartContainer>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <ChartContainer>\n                            <Typography variant=\"h6\" mb={2} sx={{ fontWeight: 600 }}>\n                                Backlog Items per Backlog\n                            </Typography>\n                            <ResponsiveContainer width=\"100%\" height={300}>\n                                <BarChart data={backlogItemCount}>\n                                    <CartesianGrid \n                                        strokeDasharray=\"3 3\" \n                                        stroke={darkMode ? '#ffffff20' : '#00000020'} \n                                    />\n                                    <XAxis \n                                        dataKey=\"name\" \n                                        stroke={darkMode ? '#ffffff80' : '#00000080'}\n                                    />\n                                    <YAxis \n                                        stroke={darkMode ? '#ffffff80' : '#00000080'}\n                                    />\n                                    <Tooltip \n                                        contentStyle={{\n                                            background: darkMode ? '#1a1a1a' : '#ffffff',\n                                            border: 'none',\n                                            borderRadius: '8px',\n                                            boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\n                                        }}\n                                    />\n                                    <Legend \n                                        verticalAlign=\"bottom\" \n                                        height={36}\n                                        formatter={(value) => (\n                                            <span style={{ color: darkMode ? '#ffffff' : '#000000' }}>\n                                                {value}\n                                            </span>\n                                        )}\n                                    />\n                                    <Bar \n                                        dataKey=\"items\" \n                                        fill=\"#82ca9d\" \n                                        radius={[4, 4, 0, 0]}\n                                    />\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </ChartContainer>\n                    </Grid>\n                </Grid>\n\n                {/* Teams & Members Widget */}\n                <Box mt={4}>\n                    <Box \n                        display=\"flex\" \n                        justifyContent=\"space-between\" \n                        alignItems=\"center\" \n                        mb={3}\n                        sx={{\n                            background: (theme) => alpha(theme.palette.background.paper, 0.6),\n                            backdropFilter: 'blur(8px)',\n                            borderRadius: 2,\n                            p: 2\n                        }}\n                    >\n                        <Tabs \n                            value={selectedTab} \n                            onChange={handleTabChange}\n                            sx={{\n                                '& .MuiTabs-indicator': {\n                                    height: 3,\n                                    borderRadius: '3px'\n                                },\n                                '& .MuiTab-root': {\n                                    textTransform: 'none',\n                                    fontWeight: 600,\n                                    minWidth: 100\n                                }\n                            }}\n                        >\n                            <Tab label=\"Teams\" />\n                            <Tab label=\"Members\" />\n                        </Tabs>\n                        <TextField\n                            size=\"small\"\n                            placeholder=\"Search...\"\n                            value={searchQuery}\n                            onChange={handleSearchChange}\n                            sx={{\n                                ml: 2,\n                                '& .MuiOutlinedInput-root': {\n                                    borderRadius: 2,\n                                    background: (theme) => alpha(theme.palette.background.paper, 0.8)\n                                }\n                            }}\n                        />\n                    </Box>\n                    <Grid container spacing={3}>\n                        {paginatedItems.map((item, index) => (\n                            <Grid item xs={12} sm={6} md={4} key={item._id}>\n                                <StyledCard\n                                    initial={{ opacity: 0, y: 20 }}\n                                    animate={{ opacity: 1, y: 0 }}\n                                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                                >\n                                    <Card>\n                                        <CardContent>\n                                            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                                                <Avatar \n                                                    sx={{ \n                                                        bgcolor: 'primary.main', \n                                                        mr: 2,\n                                                        width: 56,\n                                                        height: 56\n                                                    }}\n                                                >\n                                                    {selectedTab === 0 ? <PeopleIcon /> : item.username.charAt(0)}\n                                                </Avatar>\n                                                <Box>\n                                                    <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                                                        {selectedTab === 0 ? item.teamName : item.username}\n                                                    </Typography>\n                                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                                        {selectedTab === 0\n                                                            ? `${item.members?.length || 0} Members`\n                                                            : `Role: ${item.role}`}\n                                                    </Typography>\n                                                </Box>\n                                            </Box>\n                                        </CardContent>\n                                        <CardActions sx={{ justifyContent: 'flex-end' }}>\n                                            <IconButton \n                                                onClick={(e) => handleMenuOpen(e, item)}\n                                                sx={{ \n                                                    '&:hover': {\n                                                        background: (theme) => alpha(theme.palette.primary.main, 0.1)\n                                                    }\n                                                }}\n                                            >\n                                                <MoreVert />\n                                            </IconButton>\n                                        </CardActions>\n                                    </Card>\n                                </StyledCard>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    <Pagination\n                        count={Math.ceil(\n                            (selectedTab === 0 ? filteredTeams : filteredMembers).length / ITEMS_PER_PAGE\n                        )}\n                        page={currentPage}\n                        onChange={(_, page) => setCurrentPage(page)}\n                        sx={{ \n                            mt: 4, \n                            display: 'flex', \n                            justifyContent: 'center',\n                            '& .MuiPaginationItem-root': {\n                                borderRadius: 2\n                            }\n                        }}\n                    />\n                </Box>\n            </Box>\n            <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={handleMenuClose}\n                PaperProps={{\n                    sx: {\n                        mt: 1,\n                        borderRadius: 2,\n                        boxShadow: (theme) => theme.shadows[8],\n                        '& .MuiMenuItem-root': {\n                            px: 2,\n                            py: 1,\n                            borderRadius: 1,\n                            mx: 0.5,\n                            my: 0.25\n                        }\n                    }\n                }}\n            >\n                <MenuItem onClick={handleEdit}>\n                    <ListItemIcon>\n                        <EditIcon fontSize=\"small\" color=\"primary\" />\n                    </ListItemIcon>\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\n                    <ListItemIcon>\n                        <DeleteIcon fontSize=\"small\" color=\"error\" />\n                    </ListItemIcon>\n                    Delete\n                </MenuItem>\n            </Menu>\n        </ThemeProvider>\n    );\n};\n\nexport default Dashboard;\n","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get('/Backlogs');\n};\n\nconst getById = id => {\n    return httpClient.get(`/Backlogs/id/${id}`);\n};\n\nconst getByProject = (projectId) => {\n    return httpClient.get(`/Backlogs/projectId/${projectId}`);\n};\nconst create = data => {\n    return httpClient.post('/Backlogs', data);\n};\n\nconst update = (id, data) => {\n    return httpClient.put(`/Backlogs/${id}`, data);\n};\n\nconst remove = id => {\n    return httpClient.delete(`/Backlogs/${id}`);\n};\n\nexport default {\n    getAll,\n    getById,\n    getByProject,\n    create,\n    update,\n    remove\n};\n","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get(\"/projects\");\n};\n\nconst create = data => {\n    return httpClient.post(\"/projects\", data);\n};\n\nconst get = id => {\n    return httpClient.get(`/projects/${id}`);\n};\n\nconst getProjectById = id => {\n    return httpClient.get(`/projects/id/${id}`);\n};\n\nconst update = (id, data) => {\n    return httpClient.put(`/projects/${id}`, data);\n};\n\nconst remove = id => {\n    return httpClient.delete(`/projects/${id}`);\n};\n\nconst removeAll = () => {\n    return httpClient.delete(`/projects`);\n};\n\nconst findByTitle = title => {\n    return httpClient.get(`/projects?title=${title}`);\n};\n\nconst getProjectProgress = projectId => {\n    return httpClient.get(`/projects/${projectId}/progress`);\n};\n\nconst getBudgetAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/budget-analytics`);\n};\n\nconst getTeamPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/team-performance`);\n};\n\nconst searchProjects = searchParams => {\n    return httpClient.post(`/projects/search`, searchParams);\n};\n\nconst getProjectMessages = projectId => {\n    return httpClient.get(`/projects/${projectId}/messages`);\n};\n\nconst sendProjectMessage = (projectId, message) => {\n    return httpClient.post(`/projects/${projectId}/messages`, message);\n};\n\nconst exportProjectReport = (projectId, format) => {\n    return httpClient.get(`/projects/${projectId}/export/${format}`);\n};\n\nconst scheduleReport = (projectId, scheduleData) => {\n    return httpClient.post(`/projects/${projectId}/schedule-report`, scheduleData);\n};\n\nconst getProjectAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/analytics`);\n};\n\nconst getProjectPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/performance`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByTitle,\n    getProjectProgress,\n    getBudgetAnalytics,\n    getTeamPerformance,\n    searchProjects,\n    getProjectMessages,\n    sendProjectMessage,\n    exportProjectReport,\n    scheduleReport,\n    getProjectAnalytics,\n    getProjectById\n};\n","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get('/sprints');\n};\n\nconst getSprint = (sprintId) => {\n    return httpClient.get(`/sprints/id/${sprintId}`);\n};\n\nconst create = (sprintData) => {\n    return httpClient.post('/sprints', sprintData);\n};\n\nconst update = (sprintId, sprintData) => {\n    return httpClient.put(`/sprints/${sprintId}`, sprintData);\n};\n\nconst deleteSprint = (sprintId) => {\n    return httpClient.delete(`/sprints/${sprintId}`);\n};\n\nconst updateBacklogItems = (sprintId, backlogItemId) => {\n    console.log('Sending backlogItemId:', backlogItemId);\n    return httpClient.put(`/sprints/${sprintId}/backlogItems`, { backlogItemId });\n};\n\nconst getByProject = (projectId) => {\n    console.log('Fetching sprints for project:', projectId);\n    return httpClient.get(`/sprints/project/${projectId}`);\n};\n\nexport default { \n    getAll, \n    getSprint, \n    create, \n    update, \n    deleteSprint, \n    updateBacklogItems, \n    getByProject \n};\n","import httpClient from '../http-common';\r\n\r\nconst getAll = () => {\r\n    return httpClient.get('/teams');\r\n};\r\n\r\nconst getTeam = (teamId) => {\r\n    return httpClient.get(`/teams/${teamId}`);\r\n};\r\n\r\nconst createTeam = (teamData) => {\r\n    return httpClient.post('/teams', teamData);\r\n};\r\n\r\nconst updateTeam = (teamId, teamData) => {\r\n    return httpClient.put(`/teams/${teamId}`, teamData);\r\n};\r\n\r\nconst deleteTeam = (teamId) => {\r\n    return httpClient.delete(`/teams/${teamId}`);\r\n};\r\n\r\nconst addMember = (teamId, memberId) => {\r\n    return httpClient.post(`/teams/${teamId}/members`, { userId: memberId });\r\n};\r\n\r\nconst removeMember = (teamId, memberId) => {\r\n    return httpClient.delete(`/teams/${teamId}/members`, { data: { userId: memberId } });\r\n};\r\n\r\nconst assignToProject = (teamId, projectId) => {\r\n    return httpClient.post(`/teams/${teamId}/projects`, { projectId });\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    getTeam,\r\n    createTeam,\r\n    updateTeam,\r\n    deleteTeam,\r\n    addMember,\r\n    removeMember,\r\n    assignToProject,\r\n};","import httpClient from '../http-common';\nconst getAll = () => {\n    return httpClient.get(('/users'));\n}\nconst getUser =  usersId => {\n    return httpClient.get(`/users/id/${usersId}`);\n}\nconst getUserByRole =  role => {\n    return httpClient.get(`/users/role/${role}`);\n}\nconst create = ( userstData) => {\n    return httpClient.post(`/users`, userstData);\n}\nconst update = ( usersId,usersData) => {\n    return httpClient.put(`/users/${usersId}`, usersData);\n}\nconst deleteUsers =  usersId =>{\n    return httpClient.delete(`/users/${usersId}`);\n}\nexport  default {getAll,create,deleteUsers,getUser,update,getUserByRole}\n"],"names":["COLORS","renderCustomizedLabel","_ref","cx","cy","midAngle","innerRadius","outerRadius","percent","value","name","RADIAN","Math","PI","radius","x","cos","y","sin","_jsx","fill","textAnchor","dominantBaseline","style","fontSize","fontWeight","children","concat","themeConfig","darkMode","createTheme","palette","mode","StyledCard","styled","motion","div","_ref2","theme","height","background","alpha","paper","backdropFilter","transition","transform","boxShadow","shadows","StatsCard","Paper","_ref3","padding","spacing","textAlign","primary","dark","light","ChartContainer","_ref4","borderRadius","shape","Dashboard","setDarkMode","useState","teams","setTeams","teamMembers","setTeamMembers","projects","setProjects","sprints","setSprints","backlogs","setBacklogs","currentPage","setCurrentPage","selectedTab","setSelectedTab","searchQuery","setSearchQuery","anchorEl","setAnchorEl","selectedItem","setSelectedItem","navigate","useNavigate","useEffect","fetchData","async","teamsRes","membersRes","projectsRes","sprintsRes","backlogsRes","Promise","all","TeamService","getAll","UserService","getUserByRole","ProjectService","SprintService","BacklogService","data","err","console","error","filteredTeams","filter","team","teamName","toLowerCase","includes","filteredMembers","member","username","paginatedItems","slice","progressionChartData","map","project","projectName","Progress","min","max","Date","now","startDate","getTime","endDate","projectStatusData","p","status","length","color","item","sprintStatusData","s","backlogItemCount","backlog","_backlog$items","items","handleMenuClose","_jsxs","ThemeProvider","Box","component","initial","opacity","animate","duration","sx","minHeight","display","justifyContent","alignItems","mb","Typography","variant","WebkitBackgroundClip","WebkitTextFillColor","gap","Switch","checked","onChange","Grid","container","xs","sm","md","whileHover","scale","gutterBottom","mt","ResponsiveContainer","width","BarChart","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","YAxis","ChartTooltip","contentStyle","border","Legend","Bar","position","PieChart","Pie","nameKey","paddingAngle","labelLine","label","entry","index","Cell","strokeWidth","Tooltip","formatter","verticalAlign","content","_ref5","payload","flexWrap","backgroundColor","top","left","pointerEvents","LineChart","Line","type","dot","r","activeDot","Tabs","handleTabChange","event","newValue","textTransform","minWidth","Tab","TextField","size","placeholder","e","target","ml","_item$members","delay","Card","CardContent","Avatar","bgcolor","mr","PeopleIcon","charAt","members","role","CardActions","IconButton","onClick","handleMenuOpen","currentTarget","main","MoreVert","_id","Pagination","count","ceil","page","_","Menu","open","Boolean","onClose","PaperProps","px","py","mx","my","MenuItem","handleEdit","ListItemIcon","EditIcon","DeleteIcon","httpClient","get","getById","id","getByProject","projectId","create","post","update","put","remove","delete","removeAll","findByTitle","title","getProjectProgress","getBudgetAnalytics","getTeamPerformance","searchProjects","searchParams","getProjectMessages","sendProjectMessage","message","exportProjectReport","format","scheduleReport","scheduleData","getProjectAnalytics","getProjectById","getSprint","sprintId","sprintData","deleteSprint","updateBacklogItems","backlogItemId","log","getTeam","teamId","createTeam","teamData","updateTeam","deleteTeam","addMember","memberId","userId","removeMember","assignToProject","userstData","deleteUsers","usersId","getUser","usersData"],"sourceRoot":""}