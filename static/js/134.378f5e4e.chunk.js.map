{"version":3,"file":"static/js/134.378f5e4e.chunk.js","mappings":"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","sources":["Template/AddTemplate.jsx","service/TemplateService.js","../node_modules/@mui/icons-material/esm/Folder.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  CardActionArea,\n  Grid,\n  Button,\n  TextField,\n  Snackbar,\n  Alert,\n} from '@mui/material';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport { useNavigate } from 'react-router-dom';\nimport TemplateService from '../service/TemplateService';\n\nconst AddTemplate = () => {\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [templateName, setTemplateName] = useState('');\n  const [templateDescription, setTemplateDescription] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const navigate = useNavigate();\n\n  const templates = [\n    {\n      id: 'kanban',\n      name: 'Kanban',\n      description: 'Visualize work and maximize efficiency with a kanban board',\n      Icon: DashboardIcon,\n    },\n    {\n      id: 'scrum',\n      name: 'Scrum',\n      description: 'Plan, prioritize, and schedule sprints using scrum framework',\n      Icon: TimelineIcon,\n    },\n    {\n      id: 'project',\n      name: 'Project Management',\n      description: 'Manage and track agile work plus integrate developer tools like GitHub',\n      Icon: FolderIcon,\n    },\n  ];\n\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n    setTemplateDescription(template.description);\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedTemplate || !templateName.trim()) {\n      setSnackbar({\n        open: true,\n        message: 'Please fill in all required fields',\n        severity: 'error',\n      });\n      return;\n    }\n\n    try {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        setSnackbar({\n          open: true,\n          message: 'User not authenticated. Please login again.',\n          severity: 'error',\n        });\n        return;\n      }\n\n      const templateData = {\n        name: templateName,\n        description: templateDescription || selectedTemplate.description,\n        type: selectedTemplate.id,\n        icon: selectedTemplate.id === 'kanban' ? 'kanban' : \n              selectedTemplate.id === 'scrum' ? 'speed' : 'project',\n        features: [],\n        defaultColumns: [\n          { name: 'To Do', order: 1, wipLimit: 0 },\n          { name: 'In Progress', order: 2, wipLimit: 3 },\n          { name: 'Done', order: 3, wipLimit: 0 }\n        ],\n        settings: {\n          sprintDuration: 2\n        },\n        createdBy: userId\n      };\n\n      await TemplateService.create(templateData);\n      setSnackbar({\n        open: true,\n        message: 'Template created successfully',\n        severity: 'success',\n      });\n      \n      setTimeout(() => {\n        navigate('/templates');\n      }, 1500);\n    } catch (error) {\n      console.error('Error creating template:', error);\n      setSnackbar({\n        open: true,\n        message: error.response?.data?.message || 'Error creating template. Please try again.',\n        severity: 'error',\n      });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Choose a template\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n        Start with a template that fits your team's needs. You can customize it later.\n      </Typography>\n      \n      <Box sx={{ mt: 4 }}>\n        <Grid container spacing={3}>\n          {templates.map((template) => {\n            const IconComponent = template.Icon;\n            return (\n              <Grid item xs={12} md={4} key={template.id}>\n                <Card \n                  sx={{ \n                    height: '100%',\n                    border: selectedTemplate?.id === template.id ? 2 : 1,\n                    borderColor: selectedTemplate?.id === template.id ? 'primary.main' : 'grey.300',\n                  }}\n                >\n                  <CardActionArea \n                    onClick={() => handleTemplateSelect(template)}\n                    sx={{ height: '100%', p: 2 }}\n                  >\n                    <CardContent>\n                      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n                        <IconComponent sx={{ fontSize: 40 }} />\n                        <Typography variant=\"h6\" component=\"div\">\n                          {template.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                          {template.description}\n                        </Typography>\n                      </Box>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n\n      {selectedTemplate && (\n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Template Details\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label=\"Template Name\"\n                value={templateName}\n                onChange={(e) => setTemplateName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                label=\"Description\"\n                value={templateDescription}\n                onChange={(e) => setTemplateDescription(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => navigate('/templates')}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          disabled={!selectedTemplate || !templateName.trim()}\n          onClick={handleSubmit}\n        >\n          Create Template\n        </Button>\n      </Box>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n      >\n        <Alert\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default AddTemplate;","import httpClient from '../http-common';\n\nconst getAll = () => {\n    console.log('Fetching all templates...');\n    return httpClient.get('/template/all');\n};\n\nconst getTemplate = (id) => {\n    console.log('Fetching template with ID:', id);\n    return httpClient.get(`/template/${id}`);\n};\n\nconst getTemplatesByType = (type) => {\n    console.log('Fetching templates by type:', type);\n    return httpClient.get(`/template/type/${type}`);\n};\n\nconst getDefaultTemplates = () => {\n    console.log('Fetching default templates...');\n    return httpClient.get('/template/default');\n};\n\nconst create = (templateData) => {\n    console.log('Creating template with data:', templateData);\n    return httpClient.post('/template/create', templateData);\n};\n\nconst update = (id, templateData) => {\n    console.log('Updating template with ID:', id);\n    console.log('Update data:', templateData);\n    return httpClient.put(`/template/update/${id}`, templateData);\n};\n\nconst deleteTemplate = (id) => {\n    console.log('Deleting template with ID:', id);\n    return httpClient.delete(`/template/delete/${id}`);\n};\n\nconst cloneTemplate = (id) => {\n    console.log('Cloning template with ID:', id);\n    return httpClient.post(`/template/${id}/clone`);\n};\n\nexport default { \n    getAll, \n    getTemplate, \n    getTemplatesByType, \n    getDefaultTemplates,\n    create, \n    update, \n    delete: deleteTemplate,\n    clone: cloneTemplate \n};","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8z\"\n}), 'Folder');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from \"./cardActionAreaClasses.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n})));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n})));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n    children,\n    className,\n    focusVisibleClassName,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, {\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["AddTemplate","selectedTemplate","setSelectedTemplate","useState","templateName","setTemplateName","templateDescription","setTemplateDescription","snackbar","setSnackbar","open","message","severity","navigate","useNavigate","templates","id","name","description","Icon","DashboardIcon","TimelineIcon","FolderIcon","_jsxs","Container","maxWidth","sx","mt","mb","children","_jsx","Typography","variant","gutterBottom","color","Box","Grid","container","spacing","map","template","IconComponent","item","xs","md","Card","height","border","borderColor","CardActionArea","onClick","handleTemplateSelect","p","CardContent","display","flexDirection","alignItems","gap","fontSize","component","align","TextField","required","fullWidth","label","value","onChange","e","target","multiline","rows","justifyContent","Button","disabled","trim","async","userId","localStorage","getItem","templateData","type","icon","features","defaultColumns","order","wipLimit","settings","sprintDuration","createdBy","TemplateService","create","setTimeout","error","_error$response","_error$response$data","console","response","data","Snackbar","autoHideDuration","onClose","_objectSpread","Alert","width","getAll","log","httpClient","get","getTemplate","concat","getTemplatesByType","getDefaultTemplates","post","update","put","delete","clone","createSvgIcon","d","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","overridesResolver","props","styles","root","memoTheme","_ref","theme","textAlign","borderRadius","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","duration","short","React","inProps","ref","useDefaultProps","className","focusVisibleClassName","other","_objectWithoutProperties","ownerState","classes","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","as"],"sourceRoot":""}