{"version":3,"file":"static/js/872.fc8077c7.chunk.js","mappings":"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","sources":["Team/TeamComponent.jsx","service/ProjectService.js","service/TeamService.js","service/UserService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TeamService from '../service/TeamService';\r\nimport UserService from '../service/UserService';\r\nimport ProjectService from '../service/ProjectService';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Tooltip,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\n\r\nconst TeamComponent = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [newTeam, setNewTeam] = useState({\r\n    teamName: '',\r\n    teamLead: '',\r\n    members: [],\r\n    projects: [],\r\n  });\r\n  const [teamLeads, setTeamLeads] = useState([]);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [teamsResponse, teamLeadsResponse, teamMembersResponse, projectsResponse] = await Promise.all([\r\n        TeamService.getAll(),\r\n        UserService.getUserByRole('manager'),\r\n        UserService.getUserByRole('developer'),\r\n        ProjectService.getAll(),\r\n      ]);\r\n\r\n      setTeams(teamsResponse.data);\r\n      setTeamLeads(teamLeadsResponse.data);\r\n      setTeamMembers(teamMembersResponse.data);\r\n      setProjects(projectsResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTeam((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await TeamService.createTeam(newTeam);\r\n      setNewTeam({\r\n        teamName: '',\r\n        teamLead: '',\r\n        members: [],\r\n        projects: [],\r\n      });\r\n      await fetchData();\r\n      setOpenDialog(false);\r\n    } catch (error) {\r\n      console.error('Error creating team:', error);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n      <Box p={4}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Team Management\r\n        </Typography>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenDialog}\r\n          >\r\n            Add Team\r\n          </Button>\r\n        </Box>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Team Name</TableCell>\r\n                <TableCell>Team Lead</TableCell>\r\n                <TableCell>Members</TableCell>\r\n                <TableCell>Projects</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {teams.map((team) => {\r\n                const teamLead = teamLeads.find((lead) => lead._id === team.teamLead);\r\n                const teamMembersList = teamMembers.filter((member) => team.members.includes(member._id));\r\n                const teamProjectsList = projects.filter((project) => team.projects.includes(project._id));\r\n\r\n                return (\r\n                    <TableRow key={team._id}>\r\n                      <TableCell>{team.teamName}</TableCell>\r\n                      <TableCell>{teamLead?.username || 'Not assigned'}</TableCell>\r\n                      <TableCell>\r\n                        {teamMembersList.map(member => (\r\n                            <Chip key={member._id} label={member.username} size=\"small\" style={{ margin: '2px' }} />\r\n                        ))}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {teamProjectsList.map(project => (\r\n                            <Chip key={project._id} label={project.ProjectName} size=\"small\" style={{ margin: '2px' }} />\r\n                        ))}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Tooltip title=\"Edit\">\r\n                          <IconButton>\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add New Team</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                  label=\"Team Name\"\r\n                  name=\"teamName\"\r\n                  value={newTeam.teamName}\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n              />\r\n              <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\r\n                <InputLabel id=\"team-lead-label\">Team Lead</InputLabel>\r\n                <Select\r\n                    labelId=\"team-lead-label\"\r\n                    name=\"teamLead\"\r\n                    value={newTeam.teamLead}\r\n                    onChange={handleInputChange}\r\n                    label=\"Team Lead\"\r\n                >\r\n                  <MenuItem value=\"\">Select a team lead</MenuItem>\r\n                  {teamLeads.map((teamLead) => (\r\n                      <MenuItem key={teamLead._id} value={teamLead._id}>\r\n                        {teamLead.username}\r\n                      </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\r\n                <InputLabel id=\"members-label\">Members</InputLabel>\r\n                <Select\r\n                    labelId=\"members-label\"\r\n                    name=\"members\"\r\n                    multiple\r\n                    value={newTeam.members}\r\n                    onChange={handleInputChange}\r\n                    label=\"Members\"\r\n                    renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                              <Chip key={value} label={teamMembers.find(member => member._id === value)?.username} />\r\n                          ))}\r\n                        </Box>\r\n                    )}\r\n                >\r\n                  {teamMembers.map((member) => (\r\n                      <MenuItem key={member._id} value={member._id}>\r\n                        {member.username}\r\n                      </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\r\n                <InputLabel id=\"projects-label\">Projects</InputLabel>\r\n                <Select\r\n                    labelId=\"projects-label\"\r\n                    name=\"projects\"\r\n                    multiple\r\n                    value={newTeam.projects}\r\n                    onChange={handleInputChange}\r\n                    label=\"Projects\"\r\n                    renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                              <Chip key={value} label={projects.find(project => project._id === value)?.ProjectName} />\r\n                          ))}\r\n                        </Box>\r\n                    )}\r\n                >\r\n                  {projects.map((project) => (\r\n                      <MenuItem key={project._id} value={project._id}>\r\n                        {project.ProjectName}\r\n                      </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n              Create Team\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default TeamComponent;","import httpClient from '../http-common';\n\nconst getAll = () => {\n    return httpClient.get(\"/projects\");\n};\n\nconst create = data => {\n    return httpClient.post(\"/projects\", data);\n};\n\nconst get = id => {\n    return httpClient.get(`/projects/${id}`);\n};\n\nconst getProjectById = id => {\n    return httpClient.get(`/projects/id/${id}`);\n};\n\nconst update = (id, data) => {\n    return httpClient.put(`/projects/${id}`, data);\n};\n\nconst remove = id => {\n    return httpClient.delete(`/projects/${id}`);\n};\n\nconst removeAll = () => {\n    return httpClient.delete(`/projects`);\n};\n\nconst findByTitle = title => {\n    return httpClient.get(`/projects?title=${title}`);\n};\n\nconst getProjectProgress = projectId => {\n    return httpClient.get(`/projects/${projectId}/progress`);\n};\n\nconst getBudgetAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/budget-analytics`);\n};\n\nconst getTeamPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/team-performance`);\n};\n\nconst searchProjects = searchParams => {\n    return httpClient.post(`/projects/search`, searchParams);\n};\n\nconst getProjectMessages = projectId => {\n    return httpClient.get(`/projects/${projectId}/messages`);\n};\n\nconst sendProjectMessage = (projectId, message) => {\n    return httpClient.post(`/projects/${projectId}/messages`, message);\n};\n\nconst exportProjectReport = (projectId, format) => {\n    return httpClient.get(`/projects/${projectId}/export/${format}`);\n};\n\nconst scheduleReport = (projectId, scheduleData) => {\n    return httpClient.post(`/projects/${projectId}/schedule-report`, scheduleData);\n};\n\nconst getProjectAnalytics = projectId => {\n    return httpClient.get(`/projects/${projectId}/analytics`);\n};\n\nconst getProjectPerformance = projectId => {\n    return httpClient.get(`/projects/${projectId}/performance`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByTitle,\n    getProjectProgress,\n    getBudgetAnalytics,\n    getTeamPerformance,\n    searchProjects,\n    getProjectMessages,\n    sendProjectMessage,\n    exportProjectReport,\n    scheduleReport,\n    getProjectAnalytics,\n    getProjectById\n};\n","import httpClient from '../http-common';\r\n\r\nconst getAll = () => {\r\n    return httpClient.get('/teams');\r\n};\r\n\r\nconst getTeam = (teamId) => {\r\n    return httpClient.get(`/teams/${teamId}`);\r\n};\r\n\r\nconst createTeam = (teamData) => {\r\n    return httpClient.post('/teams', teamData);\r\n};\r\n\r\nconst updateTeam = (teamId, teamData) => {\r\n    return httpClient.put(`/teams/${teamId}`, teamData);\r\n};\r\n\r\nconst deleteTeam = (teamId) => {\r\n    return httpClient.delete(`/teams/${teamId}`);\r\n};\r\n\r\nconst addMember = (teamId, memberId) => {\r\n    return httpClient.post(`/teams/${teamId}/members`, { userId: memberId });\r\n};\r\n\r\nconst removeMember = (teamId, memberId) => {\r\n    return httpClient.delete(`/teams/${teamId}/members`, { data: { userId: memberId } });\r\n};\r\n\r\nconst assignToProject = (teamId, projectId) => {\r\n    return httpClient.post(`/teams/${teamId}/projects`, { projectId });\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    getTeam,\r\n    createTeam,\r\n    updateTeam,\r\n    deleteTeam,\r\n    addMember,\r\n    removeMember,\r\n    assignToProject,\r\n};","import httpClient from '../http-common';\nconst getAll = () => {\n    return httpClient.get(('/users'));\n}\nconst getUser =  usersId => {\n    return httpClient.get(`/users/id/${usersId}`);\n}\nconst getUserByRole =  role => {\n    return httpClient.get(`/users/role/${role}`);\n}\nconst create = ( userstData) => {\n    return httpClient.post(`/users`, userstData);\n}\nconst update = ( usersId,usersData) => {\n    return httpClient.put(`/users/${usersId}`, usersData);\n}\nconst deleteUsers =  usersId =>{\n    return httpClient.delete(`/users/${usersId}`);\n}\nexport  default {getAll,create,deleteUsers,getUser,update,getUserByRole}\n"],"names":["TeamComponent","teams","setTeams","useState","newTeam","setNewTeam","teamName","teamLead","members","projects","teamLeads","setTeamLeads","teamMembers","setTeamMembers","setProjects","openDialog","setOpenDialog","fetchData","async","teamsResponse","teamLeadsResponse","teamMembersResponse","projectsResponse","Promise","all","TeamService","getAll","UserService","getUserByRole","ProjectService","data","error","console","useEffect","handleInputChange","e","name","value","target","prevState","_objectSpread","handleSubmit","preventDefault","createTeam","handleCloseDialog","_jsxs","Box","p","children","_jsx","Typography","variant","gutterBottom","display","justifyContent","mb","Button","color","startIcon","AddIcon","onClick","handleOpenDialog","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","team","find","lead","_id","teamMembersList","filter","member","includes","teamProjectsList","project","username","Chip","label","size","style","margin","ProjectName","Tooltip","title","IconButton","EditIcon","DeleteIcon","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","onSubmit","TextField","onChange","FormControl","InputLabel","id","Select","labelId","MenuItem","multiple","renderValue","selected","sx","flexWrap","gap","_teamMembers$find","_projects$find","DialogActions","httpClient","get","concat","create","post","update","put","remove","delete","removeAll","findByTitle","getProjectProgress","projectId","getBudgetAnalytics","getTeamPerformance","searchProjects","searchParams","getProjectMessages","sendProjectMessage","message","exportProjectReport","format","scheduleReport","scheduleData","getProjectAnalytics","getProjectById","getTeam","teamId","teamData","updateTeam","deleteTeam","addMember","memberId","userId","removeMember","assignToProject","userstData","deleteUsers","usersId","getUser","usersData","role"],"sourceRoot":""}